#!/usr/bin/env coffee

# dependencies
app				= require 'nomnom'
fs				= require 'fs'





# compute config
config = {}
if fs.existsSync "#{process.env.HOME}/.geoffrey/config.json"
	config = JSON.parse fs.readFileSync "#{process.env.HOME}/.geoffrey/config.json"
config.plugins = "#{process.env.HOME}/.geoffrey/plugins" if not config.plugins?
config.adapters = "#{process.env.HOME}/.geoffrey/adapters" if not config.adapters?
config.adapter = 'http' if not config.adapter?
config.log = false if not config.log?





# geoffrey --version
app.option 'version',
	abbr: 'v'
	flag: true
	help: 'print geoffrey version'
	callback: () ->
		console.log require('../package.json').version
		process.exit 0





# geoffrey server --wit … --plugins … --adapters … --adapter …
app.command 'server'
	.help 'run the geoffrey server'

	# --wit
	.option 'wit',
		abbr: 'w'
		help: 'wit API token'
		callback: (token) ->
			config.wit = token

	# --plugins
	.option 'plugins',
		abbr: 'p'
		default: config.plugins
		help: 'plugins path'
		callback: (path) ->
			config.plugins = path

	# --adapters
	.option 'adapters',
		abbr: 'd'
		default: config.adapters
		help: 'adapters path'
		callback: (path) ->
			config.adapters = path

	# --adapter
	.option 'adapter',
		abbr: 'a'
		default: config.adapter
		help: 'adapter to use'
		callback: (name) ->
			config.adapter = name

	.callback () ->
		(require '../scripts/server') config





# geoffrey deps --plugins … --adapters … --adapter …
app.command 'deps'
	.help 'install script & adapter dependencies'

	# --plugins
	.option 'plugins',
		abbr: 'p'
		default: config.scripts
		help: 'plugins path'
		callback: (path) ->
			config.plugins = path

	# --adapters
	.option 'adapters',
		abbr: 'd'
		default: config.adapters
		help: 'adapters path'
		callback: (path) ->
			config.adapters = path

	# --adapter
	.option 'adapter',
		abbr: 'a'
		default: config.adapter
		help: 'adapter to use'
		callback: (name) ->
			config.adapter = name

	.callback () ->
		(require '../scripts/deps') config





# geoffrey init
app.command 'init'
	.help 'help configuring geoffrey'

	.callback () ->
		(require '../scripts/init') config





# parse options, call scripts
app.parse()
#!/usr/bin/env coffee

# dependencies
app				= require 'nomnom'
fs				= require 'fs'





# compute config
config = {}
if fs.existsSync "#{process.env.HOME}/.geoffrey/config.json"
	config = JSON.parse fs.readFileSync "#{process.env.HOME}/.geoffrey/config.json"
config.scripts = "#{process.env.HOME}/.geoffrey/scripts" if not config.scripts?
config.adaptors = "#{process.env.HOME}/.geoffrey/adaptors" if not config.adaptors?
config.adaptor = 'http' if not config.adaptor?
config.log = false if not config.log?





# geoffrey --version
app.option 'version',
	abbr: 'v'
	flag: true
	help: 'print geoffrey version'
	callback: () ->
		console.log require('../package.json').version
		process.exit 0





# geoffrey server --wit … --scripts … --adaptors … --adaptor …
app.command 'server'
	.help 'run the geoffrey server'

	# --wit
	.option 'wit',
		abbr: 'w'
		help: 'wit API token'
		callback: (token) ->
			config.wit = token

	# --scripts
	.option 'scripts',
		abbr: 's'
		default: config.scripts
		help: 'scripts path'
		callback: (path) ->
			config.scripts = path

	# --adaptors
	.option 'adaptors',
		abbr: 'd'
		default: config.adaptors
		help: 'adaptors path'
		callback: (path) ->
			config.adaptors = path

	# --adaptor
	.option 'adaptor',
		abbr: 'a'
		default: config.adaptor
		help: 'adaptor to use'
		callback: (name) ->
			config.adaptor = name

	.callback () ->
		(require '../scripts/server') config





# geoffrey deps --scripts … --adaptors … --adaptor …
app.command 'deps'
	.help 'install script & adaptor dependencies'

	# --scripts
	.option 'scripts',
		abbr: 's'
		default: config.scripts
		help: 'scripts path'
		callback: (path) ->
			config.scripts = path

	# --adaptors
	.option 'adaptors',
		abbr: 'd'
		default: config.adaptors
		help: 'adaptors path'
		callback: (path) ->
			config.adaptors = path

	# --adaptor
	.option 'adaptor',
		abbr: 'a'
		default: config.adaptor
		help: 'adaptor to use'
		callback: (name) ->
			config.adaptor = name

	.callback () ->
		(require '../scripts/deps') config





# geoffrey init
app.command 'init'
	.help 'help configuring geoffrey'

	.callback () ->
		(require '../scripts/init') config





# parse options, call scripts
app.parse()